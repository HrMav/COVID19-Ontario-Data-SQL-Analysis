/* create table */

CREATE TABLE `opendata`.`ONCOVID19testing` (`ï»¿_id` int, `DATE` date, `PHU_num` int, 
`PHU_name` text, `percent_positive_7d_avg` double, `test_volumes_7d_avg` int, `tests_per_1000_7d_avg` 
double, `percent_complete_nextday_7d_avg` double, `percent_complete_2days_7d_avg` double);

CREATE TABLE `opendata`.`ONCOVID19vaccine` (`_id` int, `Date` date, 
`PHU ID` int, `PHU name` text, `Agegroup` text, `At least one dose_cumulative` int, `Second_dose_cumulative` int, 
`fully_vaccinated_cumulative` int, `third_dose_cumulative` int, `Total population` int, `Percent_at_least_one_dose` double, 
`Percent_fully_vaccinated` double, `Percent_3doses` double);

/* bulk upload csv files */

LOAD DATA INFILE 'Ontario COVID-19 testing metrics by Public Health Unit (PHU) - Corrected.csv' 
INTO TABLE ONCOVID19testing
FIELDS TERMINATED BY ','
IGNORE 1 ROWS;

LOAD DATA INFILE 'COVID-19 Vaccine data by Public Health Unit (PHU) and by age - Dates Fixed.csv' 
INTO TABLE ONCOVID19vaccine
FIELDS TERMINATED BY ','
IGNORE 1 ROWS;

/* rename column */

alter table ONCOVID19testing
rename column `PHU_num` TO `PHU ID`;

/* Lets start with basic SQL queries */

SELECT COUNT(*)
FROM ONCOVID19vaccine;

/* Get the average percentage of people with at least one dose by age group */

SELECT Agegroup, AVG(Percent_at_least_one_dose)
FROM ONCOVID19vaccine
GROUP BY Agegroup;

/* Find the highest number of third doses administered in a single PHU */

SELECT `PHU name`, max(third_dose_cumulative) as MaxThirdDose
FROM ONCOVID19vaccine
GROUP BY `PHU name`
ORDER BY MaxThirdDose DESC
LIMIT 5;

/* Find the PHU with the highest test per 1000 people average */

SELECT `PHU_name`, MAX(tests_per_1000_7d_avg) as MaxTestsPerThousand
FROM ONCOVID19testing
GROUP BY `PHU_name`
ORDER BY MaxTestsPerThousand DESC
LIMIT 1;

/* Find PHUs with the lowest percentage of fully vaccinated people and display the relevant details */

SELECT 
    `PHU ID`, 
    `PHU name`, 
    MIN(Percent_fully_vaccinated) as LowestVaccinationRate
FROM 
    ONCOVID19vaccine
GROUP BY 
    `PHU ID`, `PHU name`
ORDER BY 
    LowestVaccinationRate ASC
LIMIT 10;

/* Calculate the total number of vaccinated individuals by age group for the latest date in the dataset */

SELECT 
    Agegroup, 
    SUM(`At least one dose_cumulative`) as TotalAtLeastOneDose,
    SUM(`fully_vaccinated_cumulative`) as TotalFullyVaccinated
FROM 
    ONCOVID19vaccine
WHERE 
    Date = (SELECT MAX(Date) FROM ONCOVID19vaccine)
GROUP BY 
    Agegroup;

/* Rank the PHUs by the percentage of fully vaccinated individuals using a window function */

SELECT 
    `PHU ID`, 
    `PHU name`, 
    `Percent_fully_vaccinated`,
    RANK() OVER (ORDER BY `Percent_fully_vaccinated` DESC) as VaccinationRank
FROM 
    ONCOVID19vaccine;

/* Get the average test positivity rate for each PHU, only including days with more than 1000 tests */

SELECT 
    `PHU_name`, 
    AVG(percent_positive_7d_avg) as AvgPositivityRate
FROM 
    ONCOVID19testing
WHERE 
    test_volumes_7d_avg > 1000
GROUP BY 
    `PHU_name`;

/* Find PHUs with the greatest improvement in test turnaround time over the dataset's timeframe */

WITH TurnaroundImprovement AS (
    SELECT 
        `PHU_name`, 
        (MAX(percent_complete_nextday_7d_avg) - MIN(percent_complete_nextday_7d_avg)) as Improvement
    FROM 
        ONCOVID19testing
    GROUP BY 
        `PHU_name`
)
SELECT 
    `PHU_name`, 
    Improvement
FROM 
    TurnaroundImprovement
ORDER BY 
    Improvement DESC
LIMIT 10;

/* Find the dates with the highest number of tests performed across all PHUs */

SELECT 
    DATE, 
    SUM(test_volumes_7d_avg) as TotalTests
FROM 
    ONCOVID19testing
GROUP BY 
    DATE
ORDER BY 
    TotalTests DESC
LIMIT 10;

/* Join the vaccine and testing tables on the PHU ID and get the total vaccine doses and test volumes for each PHU */

SELECT 
    v.`PHU ID`, 
    v.`PHU name`, 
    SUM(v.`fully_vaccinated_cumulative`) as TotalVaccinated,
    SUM(t.`test_volumes_7d_avg`) as TotalTests
FROM 
    ONCOVID19vaccine v
JOIN 
    ONCOVID19testing t ON v.`PHU ID` = t.`PHU ID`
GROUP BY 
    v.`PHU ID`, v.`PHU name`;
